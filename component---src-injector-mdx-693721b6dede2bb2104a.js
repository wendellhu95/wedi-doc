(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{RxwW:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return r})),t.d(n,"default",(function(){return s}));var c=t("Fcif"),i=t("+I+c"),o=t("/FXl"),a=t("TjRS"),r=(t("aD51"),{});void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/injector.mdx"}});var l={_frontmatter:r},d=a.a;function s(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(o.b)(d,Object(c.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"dependency-injection"},"Dependency Injection"),Object(o.b)("p",null,"In case you are not familiar with dependency injection pattern, here are three major concepts in a dependency injection system you should know:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Dependency Item"),": Anything that could be used by other classes or React components. Usually they are identified by ",Object(o.b)("inlineCode",{parentName:"li"},"key"),"s. A dependency could be a class, a value or a function, etc."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Provider")," (a.k.a injector). The manager of dependency items. It ",Object(o.b)("em",{parentName:"li"},"provides")," dependency items and instantiate or evaluate dependency items at consumers' need."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Consumer"),": They consume dependency items. They use ",Object(o.b)("inlineCode",{parentName:"li"},"key"),"s to get dependency items. A consumers can be a dependency item at the same time.")),Object(o.b)("h2",{id:"dependencycollection"},"DependencyCollection"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"DependencyCollection")," is used to collect dependencies. Later it would be passed into an injector."),Object(o.b)("pre",null,Object(o.b)("code",Object(c.a)({parentName:"pre"},{className:"language-ts"}),"const collection = new DependencyCollection([\n  // ...items\n])\n")),Object(o.b)("h2",{id:"injector"},"Injector"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"Injector")," is the one who instantiates, provides and manages dependencies. And they will form a layered injection system."),Object(o.b)("pre",null,Object(o.b)("code",Object(c.a)({parentName:"pre"},{className:"language-tsx"}),"const injector = new Injector(collection)\n")),Object(o.b)("h2",{id:"multi-layered-injector-system"},"Multi-Layered Injector System"),Object(o.b)("p",null,"wedi supports multi-layered injector system. In another word, every injector could have child injectors. A child injector could ask its parent injector for a dependency when it could not provide a by itself."),Object(o.b)("h2",{id:"why-dependency-injection"},"Why Dependency Injection?"))}void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/injector.mdx"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-injector-mdx-693721b6dede2bb2104a.js.map