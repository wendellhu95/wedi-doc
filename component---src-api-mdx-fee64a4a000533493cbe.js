(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{"0VpC":function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return o})),t.d(n,"default",(function(){return d}));t("5hJT"),t("W1QL"),t("K/PF"),t("t91x"),t("75LO"),t("PJhk");var a=t("/FXl"),c=t("TjRS");t("aD51");function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}var o={};void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/api.mdx"}});var i={_frontmatter:o},l=c.a;function d(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,a,c={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(c[t]=e[t]);return c}(e,["components"]);return Object(a.b)(l,r({},i,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"api"},"API"),Object(a.b)("h2",{id:"core"},"Core"),Object(a.b)("h3",{id:"injector"},"Injector"),Object(a.b)("p",null,"Instantiate, manage, provide and destroy dependencies."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-ts"}),"export declare class Injector implements Disposable {\n  constructor(collection: DependencyCollection, parent?: Injector)\n  add<T>(ctor: Ctor<T>): void\n  add<T>(key: Identifier<T>, item: DependencyValue<T>): void\n  createChild(dependencies?: DependencyCollection): Injector\n  get<T>(id: DependencyKey<T>): T | null\n  getOrInit<T>(id: DependencyKey<T>): T | null\n  createInstance<T>(ctor: Ctor<T> | InitPromise<T>, ...extraParams: any[]): T\n}\n")),Object(a.b)("h4",{id:"constructor"},"Constructor"),Object(a.b)("p",null,"Create an injector. Could use the ",Object(a.b)("inlineCode",{parentName:"p"},"parent")," parameter to build layered injector system."),Object(a.b)("h4",{id:"methods"},"Methods"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"add"),", to add a new dependency."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"createChild"),", to create a child injector with a bunch of dependencies."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"get"),", get a dependency. Return null if there's no existing dependency matching the given ",Object(a.b)("inlineCode",{parentName:"li"},"DependencyKey"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"getOrInit"),", get a dependency, try to instantiate one if there's no existing dependency matching the given ",Object(a.b)("inlineCode",{parentName:"li"},"DependencyKey")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"createInstance"),", instantiate a class. If the class requires dependencies, the injector would provide them.")),Object(a.b)("h3",{id:"dependencycollection"},"DependencyCollection"),Object(a.b)("p",null,"Hold dependencies and manage lifecycle of them."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-ts"}),"export declare class DependencyCollection implements Disposable {\n    constructor(deps?: DependencyItem<any>[]);\n    add<T>(ctor: Ctor<T>): void;\n    add<T>(key: DependencyKey<T>, item: DependencyValue<T> | T): void;\n    has(key: DependencyKey<any>): boolean;\n    get<T>(key: DependencyKey<T>): T | DependencyValue<T> | undefined;\n}\n")),Object(a.b)("h3",{id:"type-dependencyitem"},"[type]"," ",Object(a.b)("inlineCode",{parentName:"h3"},"DependencyItem")),Object(a.b)("p",null,"Here's valid types of a dependency item."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-tsx"}),"export declare type DependencyValue<T> = Ctor<T> | ValueItem<T> | ClassItem<T> | FactoryItem<T>;\n\nexport declare type DependencyKey<T> = Identifier<T> | Ctor<T>;\n\nexport declare type DependencyItem<T> = [Identifier<T>, DependencyValue<T>] | Ctor<T>;\n")),Object(a.b)("h3",{id:"createidentifier"},Object(a.b)("inlineCode",{parentName:"h3"},"createIdentifier")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-tsx"}),"export declare function createIdentifier<T>(name: string): Identifier<T>;\n")),Object(a.b)("p",null,"Create an identifier. This identifier could also be used as a decorator to parameters of a class."),Object(a.b)("h3",{id:"decorator-optional"},"[decorator]"," Optional"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-tsx"}),"export declare function Optional<T>(key: DependencyKey<T>): (target: Ctor<T>, _key: string, index: number) => void;\n")),Object(a.b)("p",null,"This decorator could be applied to parameters of a class to mark its dependencies as ",Object(a.b)("strong",{parentName:"p"},"optional"),"."),Object(a.b)("h3",{id:"decorator-need"},"[decorator]"," Need"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-tsx"}),"export declare function Need<T>(key: DependencyKey<T>): <C>(target: Ctor<C>, _key: string, index: number) => void;\n")),Object(a.b)("p",null,"This decorator could be applied to parameters of a class to mark its dependencies as ",Object(a.b)("strong",{parentName:"p"},"required"),"."),Object(a.b)("h3",{id:"registersingleton"},"registerSingleton"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-tsx"}),"export declare function registerSingleton<T>(id: Identifier<T>, ctor: Ctor<T>, lazyInstantiation?: boolean): void;\n")),Object(a.b)("p",null,"Register a class dependency item as singleton with a identifier."),Object(a.b)("h2",{id:"react"},"React"),Object(a.b)("h3",{id:"provider"},Object(a.b)("inlineCode",{parentName:"h3"},"Provider")),Object(a.b)("p",null,"Create a injection layer in your React application."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-tsx"}),"export declare class Provider extends Component<InjectionProviderProps>;\n\nexport interface InjectionProviderProps {\n    collection?: DependencyCollection;\n    injector?: Injector;\n}\n")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"collection")," and ",Object(a.b)("inlineCode",{parentName:"p"},"injector")," cannot be both ",Object(a.b)("inlineCode",{parentName:"p"},"undefined"),"."),Object(a.b)("h3",{id:"provide"},"Provide"),Object(a.b)("p",null,"An decorator that could be used on a React class component to provide a injection context on that component."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-tsx"}),"export declare function Provide(items: DependencyItem<any>[]): (target: any) => any;\n")),Object(a.b)("h3",{id:"inject"},Object(a.b)("inlineCode",{parentName:"h3"},"Inject")),Object(a.b)("p",null,"Returns decorator that could be used on a property of a React class component to inject a dependency"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-tsx"}),"export declare function Inject<T>(id: Identifier<T> | Ctor<T>, optional?: boolean): (target: any, propName: string, _originDescriptor?: any) => any;\n")),Object(a.b)("h3",{id:"usecollection"},Object(a.b)("inlineCode",{parentName:"h3"},"useCollection")),Object(a.b)("p",null,"When providing dependencies in a functional component, it would be expensive (not to mention logic incorrectness) to recreate dependencies."),Object(a.b)("p",null,"This API is actually a memo to return the same ",Object(a.b)("inlineCode",{parentName:"p"},"DependencyCollection")," in a component."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-tsx"}),"export declare function useCollection(entries?: DependencyItem<any>[]): DependencyCollection;\n")),Object(a.b)("h3",{id:"usedependency"},Object(a.b)("inlineCode",{parentName:"h3"},"useDependency")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-tsx"}),"export declare function useDependency<T>(key: DependencyKey<T>, optional?: boolean): T | null;\n")),Object(a.b)("h2",{id:"rxjs"},"RxJS"),Object(a.b)("h3",{id:"usedependencyvalue"},Object(a.b)("inlineCode",{parentName:"h3"},"useDependencyValue")),Object(a.b)("p",null,"Unwrap an observable value, return it to the component for rendering, and trigger re-render when value changes"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"IMPORTANT"),". Parent and child components should not subscribe to the same observable, otherwise unnecessary re-render would be triggered. Instead, the top-most component should subscribe and pass value of the observable to its offspring, by props or context."),Object(a.b)("p",null,"If you have to do that, consider using ",Object(a.b)("inlineCode",{parentName:"p"},"useDependencyContext")," and ",Object(a.b)("inlineCode",{parentName:"p"},"useDependencyContextValue")," instead."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-tsx"}),"export declare function useDependencyValue<T>(depValue$: Observable<T>, defaultValue?: T): T | undefined;\n")),Object(a.b)("h3",{id:"usedependencycontext--usedependencycontextvalue"},Object(a.b)("inlineCode",{parentName:"h3"},"useDependencyContext")," & ",Object(a.b)("inlineCode",{parentName:"h3"},"useDependencyContextValue")),Object(a.b)("p",null,"Subscribe to an observable value from a service, creating a context for it so its child component won't have to subscribe again and cause unnecessary."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-tsx"}),"export declare function useDependencyContext<T>(depValue$: Observable<T>, defaultValue?: T): {\n    Provider: (props: {\n        initialState?: T | undefined;\n        children: React.ReactNode;\n    }) => JSX.Element;\n    value: T | undefined;\n};\n\nexport declare function useDependencyContextValue<T>(depValue$: Observable<T>): T | undefined;\n")))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/api.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-api-mdx-fee64a4a000533493cbe.js.map