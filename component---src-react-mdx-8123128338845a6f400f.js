(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{Ye3l:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return i})),t.d(n,"default",(function(){return l}));t("5hJT"),t("W1QL"),t("K/PF"),t("t91x"),t("75LO"),t("PJhk");var o=t("/FXl"),r=t("TjRS");t("aD51");function c(){return(c=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/react.mdx"}});var a={_frontmatter:i},s=r.a;function l(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,o,r={},c=Object.keys(e);for(o=0;o<c.length;o++)t=c[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,["components"]);return Object(o.b)(s,c({},a,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"react"},"React"),Object(o.b)("p",null,"wedi provides API let you use dependency injection in React conveniently."),Object(o.b)("h2",{id:"class-component-as-provider"},"Class Component as Provider"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"Provide")," decorator could inject items into the decorated component and its child components."),Object(o.b)("pre",null,Object(o.b)("code",c({parentName:"pre"},{className:"language-ts"}),"import { Provide } from 'wedi';\nimport { FileService } from 'services/file';\nimport { IPlatformService } from 'services/platform';\n\n@Provide([\n  FileService,\n  [IPlatformService, { useClass: MobilePlatformService } ];\n])\nclass ClassComponent extends Component {\n  // FileService and IPlatformService is accessible in the component and its children\n}\n")),Object(o.b)("h2",{id:"class-component-as-consumer"},"Class Component as Consumer"),Object(o.b)("p",null,"If you would like consume dependencies in a class component, you should assign ",Object(o.b)("inlineCode",{parentName:"p"},"contextType")," to be ",Object(o.b)("inlineCode",{parentName:"p"},"InjectionContext")," and get dependencies using the ",Object(o.b)("inlineCode",{parentName:"p"},"Inject")," decorator."),Object(o.b)("pre",null,Object(o.b)("code",c({parentName:"pre"},{className:"language-ts"}),"import { Inject, InjectionContext } from 'wedi'\nimport { IPlatformService } from 'services/platform'\n\nclass ClassConsumer extends Component {\n  static contextType = InjectionContext\n\n  @Inject(FileService) fileService!: FileService // accessible to all methods of this class\n}\n")),Object(o.b)("p",null,"A class component can consume items provided by itself."),Object(o.b)("pre",null,Object(o.b)("code",c({parentName:"pre"},{className:"language-ts"}),"import { Inject, InjectionContext, Provide } from 'wedi';\nimport { IPlatformService } from 'services/platform';\n\n@Provide([\n  FileService,\n  [IPlatformService, { useClass: MobilePlatformService }];\n])\nclass ClassComponent extends Component {\n  static contextType = InjectionContext;\n\n  @Inject(IPlatformService) platformService!: IPlatformService; // this is MobilePlatformService\n}\n")),Object(o.b)("p",null,"You can pass ",Object(o.b)("inlineCode",{parentName:"p"},"true")," as the second parameter of ",Object(o.b)("inlineCode",{parentName:"p"},"Inject")," to indicate that a dependency is optional."),Object(o.b)("pre",null,Object(o.b)("code",c({parentName:"pre"},{className:"language-ts"}),"class ClassComponent extends Component {\n  static contextType = InjectionContext\n\n  @Inject(CanBeNullService, true) canBeNullService?: CanBeNullService // this can be null\n}\n")),Object(o.b)("h2",{id:"functional-component-as-provider"},"Functional Component as Provider"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"useCollection")," and ",Object(o.b)("inlineCode",{parentName:"p"},"InjectionLayer")," could make functional components as providers and make sure that dependencies wouldn't get re-instantiated when components re-render."),Object(o.b)("pre",null,Object(o.b)("code",c({parentName:"pre"},{className:"language-tsx"}),"import { useCollection, Provider } from 'wedi'\n\nfunction FunctionProvider() {\n  const collection = useCollection([FileService])\n\n  return (\n    <Provider collection={collection}>\n      {/* Child components can use FileService. */}\n    </Provider>\n  )\n}\n")),Object(o.b)("p",null,"You could also use injectors directly. But this is only recommended when the injector is outside of the React component tree."),Object(o.b)("pre",null,Object(o.b)("code",c({parentName:"pre"},{className:"language-tsx"}),"const injectorFromAnOtherPartOfYourProgram = getInjector()\n\nfunction YourReactRoot(props: { injector: Injector }) {\n  return (\n    <Provider injector={props.injector}>\n      <App />\n    </Provider>\n  )\n}\n\nReactDOM.render(\n  <YourReactRoot\n    injector={injectorFromAnotherPartOfYourProgram}\n  ></YourReactRoot>,\n  containerEl\n)\n")),Object(o.b)("p",null,"In this way, you could easily integrate React with other part of you application easily."),Object(o.b)("p",null,"You can see that when a component tries to get a dependency, it would always ask the ",Object(o.b)("strong",{parentName:"p"},"nearest")," provider for it, which means you could use scoped state management with wedi."),Object(o.b)("h2",{id:"functional-component-as-consumer"},"Functional Component as Consumer"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"useDependency")," can help you to hook in dependencies. You can assign the second parameter ",Object(o.b)("inlineCode",{parentName:"p"},"true")," to mark the injected dependency as optional."),Object(o.b)("pre",null,Object(o.b)("code",c({parentName:"pre"},{className:"language-tsx"}),"import { useDependency } from 'wedi'\nimport { FileService } from 'services/file'\nimport { LogService } from 'services/log'\n\nfunction FunctionConsumer() {\n  const fileService: FileService = useDependency(FileService)\n  const log: LogService | null = useDependency(LogService, true)\n\n  return {\n    /* use dependencies */\n  }\n}\n")),Object(o.b)("p",null,"Note that functional cannot consume items provided by itself."),Object(o.b)("h2",{id:"multi-layered-injector-system"},"Multi-Layered Injector System"),Object(o.b)("p",null,"injectors of wedi could have child components and React components could have child components. Combined, you could use multi-layered injector system in React seamlessly."),Object(o.b)("pre",null,Object(o.b)("code",c({parentName:"pre"},{className:"language-tsx"}),"@Provide([\n  [IConfig, { useValue: 'A' }],\n  [IConfigRoot, { useValue: 'inRoot' }]\n])\nclass ParentProvider extends Component {\n  render() {\n    return <ChildProvider></ChildProvider>\n  }\n}\n\n@Provide([[IConfig, { useValue: 'B' }]])\nclass ChildProvider extends Component {\n  render() {\n    return <Consumer></Consumer>\n  }\n}\n\nfunction Consumer() {\n  const config = useDependency(IConfig)\n  const rootConfig = useDependency(IConfigRoot)\n\n  return (\n    <div>\n      {config}, {rootConfig}\n    </div> // <div>B, inRoot</div>\n  )\n}\n")),Object(o.b)("h2",{id:"inject-react-component"},"Inject React Component"),Object(o.b)("p",null,"You could inject React Component as a dependency, too."),Object(o.b)("pre",null,Object(o.b)("code",c({parentName:"pre"},{className:"language-tsx"}),"const IDropdown = createIdentifier<any>('dropdown')\nconst IConfig = createIdentifier<any>('config')\n\nconst WebDropdown = function() {\n  const dep = useDependency(IConfig) // could use dependencies in its host environment\n  return <div>WeDropdown, {dep}</div>\n}\n\n@Provide([\n  [IDropdown, { useValue: WebDropdown }],\n  [IConfig, { useValue: 'wedi' }]\n])\nclass Header extends Component {\n  static contextType = InjectionContext\n\n  @Inject(IDropdown) private dropdown: any\n\n  render() {\n    const Dropdown = this.dropdown\n    return <Dropdown></Dropdown> // WeDropdown, wedi\n  }\n}\n")))}void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/react.mdx"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-react-mdx-8123128338845a6f400f.js.map